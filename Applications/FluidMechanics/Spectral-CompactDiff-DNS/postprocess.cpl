USE complex
USE rbmat
! USE rtchecks

FILE data=OPENRO("dns-supsimple.in")
INTEGER nx,ny,nz
REAL alfa0,beta0,htcoeff,ymin=0,ymax=2,t_max,dt_field,dt_save
REAL ni, meanpx=0, meanpz=0, meanflowx=0, meanflowz=0, deltat, time=0
STRING restart_file
READ BY NAME FROM data nx,ny,nz,alfa0,beta0,htcoeff,ni; ni=1/~
DO WHILE READ BY NAME FROM data meanpx OR meanflowx OR meanpz OR meanflowz
READ BY NAME FROM data deltat, t_max, dt_field, dt_save, restart_file
CLOSE data

REAL y(-1..ny+1)
!DO y(i)=ymax*i/ny FOR ALL i ! Uniform mesh
DO y(i)=ymin+0.5*(ymax-ymin)*[tanh(htcoeff*(2*i/ny-1))/tanh(htcoeff)+0.5*(ymax-ymin)] FOR ALL i ! Channel with two walls

! Compute the FD coefficients, then set special cases at the boundaries
STRUCTURE[ARRAY(-2..2) OF REAL d0,d1,d2,d4] derivatives(1..ny-1)
ARRAY(-2..2) OF REAL d040,d140,d14m1, d04n,d14n,d14np1
MODULE setup_derivatives
REAL M(0..4,0..4),t(0..4)
LOOP FOR iy=1 TO ny-1 WITH derivatives(iy)
  DO M(i,j)=(y(iy-2+j)-y(iy))**(4-i) FOR ALL i,j; LUdecomp M
  t=0; t(0)=24
  d4(-2+(*))=M\t
  DO M(i,j)=(5-i)*(6-i)*(7-i)*(8-i)*(y(iy-2+j)-y(iy))**(4-i) FOR ALL i,j; LUdecomp M
  DO t(i)=SUM {d4(j)*(y(iy+j)-y(iy))**(8-i)} FOR ALL j FOR ALL i
  d0(-2+(*))=M\t
  DO M(i,j)=(y(iy-2+j)-y(iy))**(4-i) FOR ALL i,j; LUdecomp M
  t=0; DO t(i)=SUM d0(j)*(4-i)*(3-i)*(y(iy+j)-y(iy))**(2-i) FOR ALL j FOR i=0 TO 2
  d2(-2+(*))=M\t
  t=0; DO t(i)=SUM d0(j)*(4-i)*(y(iy+j)-y(iy))**(3-i) FOR ALL j FOR i=0 TO 3
  d1(-2+(*))=M\t
REPEAT
DO M(i,j)=(y(-1+j)-y(0))**(4-i) FOR ALL i,j; LUdecomp M
t=0; t(3)=1; d140(-2+(*))=M\t
DO M(i,j)=(y(-1+j)-y(-1))**(4-i) FOR ALL i,j; LUdecomp M
t=0; t(3)=1; d14m1(-2+(*))=M\t
d04n=0; d04n(1)=1; d040=0; d040(-1)=1
DO M(i,j)=(y(ny-3+j)-y(ny))**(4-i) FOR ALL i,j; LUdecomp M
t=0; t(3)=1; d14n(-2+(*))=M\t
DO M(i,j)=(y(ny-3+j)-y(ny+1))**(4-i) FOR ALL i,j; LUdecomp M
t=0; t(3)=1; d14np1(-2+(*))=M\t
END setup_derivatives

! Prepare compact operators; D0 stands for zeroth-order, and makes the schemes compact
INLINE REAL FUNCTION D0(REAL f(*)) = d0(-2)*f(-2)+d0(-1)*f(-1)+d0(0)*f(0)+d0(1)*f(1)+d0(2)*f(2)
INLINE REAL FUNCTION D1(REAL f(*)) = d1(-2)*f(-2)+d1(-1)*f(-1)+d1(0)*f(0)+d1(1)*f(1)+d1(2)*f(2)
INLINE REAL FUNCTION D2(REAL f(*)) = d2(-2)*f(-2)+d2(-1)*f(-1)+d2(0)*f(0)+d2(1)*f(1)+d2(2)*f(2)
INLINE REAL FUNCTION D4(REAL f(*)) = d4(-2)*f(-2)+d4(-1)*f(-1)+d4(0)*f(0)+d4(1)*f(1)+d4(2)*f(2)
INLINE COMPLEX FUNCTION D0(COMPLEX f(*))=D0(f.REAL)+I*D0(f.IMAG)
INLINE COMPLEX FUNCTION D1(COMPLEX f(*))=D1(f.REAL)+I*D1(f.IMAG)
INLINE COMPLEX FUNCTION D2(COMPLEX f(*))=D2(f.REAL)+I*D2(f.IMAG)
INLINE COMPLEX FUNCTION D4(COMPLEX f(*))=D4(f.REAL)+I*D4(f.IMAG)

SUBROUTINE bcLUdecomp[POINTER TO ARRAY(-1..ny+1,-2..2) OF REAL A]
  A(0,-1..HI)=~-A(0,-2)/A(-1,-2)*A(-1,-1..HI)
  A(1,-1..HI)=~-A(1,-2)/A(-1,-2)*A(-1,-1..HI)
  A(1,0..HI)=~-A(1,-1)/A(0,-1)*A(0,0..HI)
  A[2,-1+(0..HI)]=~-A(2,-2)/A(0,-1)*A(0,0..HI)
  A(ny,LO..1)=~-A(ny,2)/A(ny+1,2)*A(ny+1,LO..1)
  A(ny-1,LO..1)=~-A(ny-1,2)/A(ny+1,2)*A(ny+1,LO..1)
  A(ny-1,LO..0)=~-A(ny-1,1)/A(ny,1)*A(ny,LO..0)
  A[ny-2,1+(LO..0)]=~-A(ny-2,2)/A(ny,1)*A(ny,LO..0)
  LUdecomp A(1..ny-1)
END bcLUdecomp

SUBROUTINE bcLeftDiv[POINTER TO ARRAY(*) OF REAL x; ARRAY(-1..ny+1,-2..2) OF REAL A]
  x(0)=~-A(0,-2)/A(-1,-2)*x(-1)
  x(1)=~-A(1,-2)/A(-1,-2)*x(-1)
  x(1)=~-A(1,-1)/A(0,-1)*x(0)
  x(2)=~-A(2,-2)/A(0,-1)*x(0)
  x(ny)=~-A(ny,2)/A(ny+1,2)*x(ny+1)
  x(ny-1)=~-A(ny-1,2)/A(ny+1,2)*x(ny+1)
  x(ny-1)=~-A(ny-1,1)/A(ny,1)*x(ny)
  x(ny-2)=~-A(ny-2,2)/A(ny,1)*x(ny)
  x(1..ny-1)=A(1..ny-1)\~
  x(0)=-{A(0,0..2)*x[1+(0..2)]}/A(0,-1)
  x(-1)=-{A(-1,-1..2)*x[1+(-1..2)]}/A(-1,-2)
  x(ny)=-{A(ny,-2..0)*x[ny-1+(-2..0)]}/A(ny,1)
  x(ny+1)=-{A(ny+1,-2..1)*x[ny-1+(-2..1)]}/A(ny+1,2)
END bcLeftDiv

ARRAY(-1..ny+1,-2..2) OF REAL D0mat=0, etamat=0, D2vmat=0
D0mat(1..ny-1)=derivatives.d0
D0mat(-1)=0; D0mat(-1,-2)=1; D0mat(0)=0; D0mat(0,-1)=1
D0mat(ny)=0; D0mat(ny,1)=1; D0mat(ny+1)=0; D0mat(ny+1,2)=1
bcLUdecomp D0mat

VELOCITY=STRUCTURE(COMPLEX u,v,w)
ARRAY(0..nx,-nz..nz,-1..ny+1) OF VELOCITY V=0

REALVEL=STRUCTURE(REAL u,v,w)
SPECTRUM=STRUCTURE(REAL uu,uv,uw,vv,vw,ww)
DERIVS=STRUCTURE(COMPLEX ux,uy,uz,vx,vy,vz,wx,wy,wz)
DERPRODS=STRUCTURE(COMPLEX ux2,vx2,wx2,uy2,vy2,wy2,uz2,vz2,wz2,uyvx,uzwx,wyvz)

REALVEL mean(0..ny)=0; SPECTRUM rms(0..ny)=0

SUBROUTINE deriv(ARRAY(*) OF REAL f0,f1^)
  f1(0)=SUM d140(i)*f0(1+i) FOR i=-2 TO 2
  f1(-1)=SUM d14m1(i)*f0(1+i) FOR i=-2 TO 2
  f1(ny)=SUM d14n(i)*f0(ny-1+i) FOR i=-2 TO 2
  f1(ny+1)=SUM d14np1(i)*f0(ny-1+i) FOR i=-2 TO 2
  DO WITH derivatives(i) f1(i)=D1(f0(i+(*))) FOR i=1 TO ny-1
  bcLeftDiv(f1,D0mat)
END deriv

INTEGER nfmin,nfmax,nftot
ASK nfmin, nfmax
nftot=nfmax-nfmin+1

LOOP files FOR n=nfmin TO nfmax

  WRITE "Reading field Field"n".bin"
  V=0
  data = OPENRO("Field"n".bin")
  WITH data
    INTEGER oldnx,oldny,oldnz
    REAL oldalfa0,oldbeta0,oldhtcoeff,oldymin=0,oldymax=2,oldni,oldeltat=0
    READ FROM data "nx="oldnx,"ny="oldny,"nz="oldnz,"alfa0="oldalfa0,"beta0="oldbeta0,"htcoeff="oldhtcoeff,"ymin="oldymin,"ymax="oldymax,"ni="oldni,"dt="oldeltat
    LOOP FOR ALL ix,iz,iy
      READ BINARY FROM data V(ix,iz,iy).v, V(ix,iz,iy).u
    REPEAT
    READ BINARY FROM data V(0,0,*).u, V(0,0,*).w
    CLOSE data
    LOOP FOR ALL ix,iz EXCEPT ix=0 AND iz=0 WITH V(ix,iz,*)
      ialfa=I*alfa0*ix; ibeta=I*beta0*iz
      k2=(alfa0*ix)**2+(beta0*iz)**2
      deriv(v.REAL,w.REAL); deriv(v.IMAG,w.IMAG)
      DO temp=(ialfa*w(iy)-ibeta*u(iy))/k2
        w(iy)=(ibeta*w(iy)+ialfa*u(iy))/k2 
        u(iy)=temp
      FOR iy=-1 TO ny+1
    REPEAT

  LOOP FOR iy=mean.LO TO mean.HI WITH mean(iy)
    u=~+V(0,0,iy).u.REAL; w=~+V(0,0,iy).w.REAL 
  REPEAT

  LOOP FOR iy=rms.LO TO rms.HI WITH rms(iy)
    uu= ~ + [NORM[V(0,*,iy).u] + 2*[SUM NORM[V(ix,*,iy).u] FOR ix=1 TO nx]] 
    vv= ~ + [NORM[V(0,*,iy).v] + 2*[SUM NORM[V(ix,*,iy).v] FOR ix=1 TO nx]]  
    ww= ~ + [NORM[V(0,*,iy).w] + 2*[SUM NORM[V(ix,*,iy).w] FOR ix=1 TO nx]]
    uv= ~ + [2*[SUM (V(ix,*,iy).u | V(ix,*,iy).v).REAL FOR ix=1 TO nx]]
    uv= ~ + [V(0,*,iy).u | V(0,*,iy).v].REAL
    uw= ~ + [2*[SUM (V(ix,*,iy).u | V(ix,*,iy).w).REAL FOR ix=1 TO nx]]
    uw= ~ + [V(0,*,iy).u | V(0,*,iy).w].REAL
    vw= ~ + [2*[SUM (V(ix,*,iy).v | V(ix,*,iy).w).REAL FOR ix=1 TO nx]]
    vw= ~ + [V(0,*,iy).v | V(0,*,iy).w].REAL 
  REPEAT LOOP

REPEAT files 

DO WITH mean(iy): u=~/nftot; v=~/nftot; w=~/nftot FOR ALL iy

DO WITH rms(iy): uu=SQRT{uu/nftot-mean(iy).u^2}; vv=SQRT{vv/nftot}; ww=SQRT{ww/nftot-mean(iy).w^2}; uv=uv/nftot; uw=uw/nftot-(mean(iy).u*mean(iy).w); vw=vw/nftot FOR iy=0 TO HI

FILE out=CREATE("mean.dat")
DO WITH mean(iy):
	WRITE TO out y(iy),u,w FOR iy=0 TO ny
CLOSE out

FILE out=CREATE("rms.dat")
DO WITH rms(iy): 
	WRITE TO out y(iy),uu,vv,ww,uv,uw,vw FOR iy=0 TO ny
CLOSE out

STOP
